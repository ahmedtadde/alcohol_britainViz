{
    "collab_server" : "",
    "contents" : "##=====  Load Libraries\n\nlibrary(pacman)\np_load(data.table)\np_load(foreach)\np_load(plotly)\np_load(dplyr)\np_load(stringi)\n\n##===== Functions\n\nReformatYear <- function(values){\n  #takes in list of values (character type)\n  #modification = removes all occurences of \",\"\n  #returns modified list of values (character type)\n\n  foreach(i=1:length(values), .combine = c) %do%{\n    values[i] <- as.character(gsub(\",\",\"\", values[i]))\n  }\n}\n\n\nReformatGender <- function(values){\n  values <- stri_trim_both(as.character(values))\n  old <- 'All persons'\n  new <- 'All'\n  values[which(values %in% old)] <- new\n  values\n}\n\n\nReformatAgeRange <- function(values){\n  values <- stri_trim_both(as.character(values))\n  old <- 'All 16+'\n  new <- '16+'\n  values[which(values %in% old)] <- new\n  values\n}\n\n\nReformatProportion <- function(values){\n  #takes in list of values (numeric type)\n  #modification = removes all occurences of \"%\"\n  #returns modified list of values (numeric type)\n\n  foreach(i=1:length(values), .combine = c) %do%{\n    values[i] <- as.numeric(gsub(\"%\",\"\", values[i]))\n  }\n}\n\n\nReformatQuestion <- function(values){\n  #takes in list of values (char type)\n  #modification = fix spelling error in 'Drank alcohol on five on more days in the last week'\n  #returns modified list of values (char type)\n  old <- 'Drank alcohol on five on more days in the last week'\n  new <- 'Drank alcohol on 5+ days'\n  values[which(values %in% old)] <- new\n  \n  old <- 'Drank alcohol in the last week'\n  new <- 'Drank alcohol'\n  values[which(values %in% old)] <- new\n  \n  values\n}\n\n\n\nMakeBarPlot <- function(df){\n  #takes in a dataframe\n  #returns a bar plots: Question vs Porportion BY Years = 2005,2016\n df[Year %in% c(2005,2016) & AgeRange == '16+' & Gender == 'All',\n    .(Year, Question, Proportion)\n  ][, Change := c(NA,diff(Proportion)), by= 'Question'] -> table\n  \n  use.font <- list(\n    family = \"Courier New, monospace\",\n    size = 15,\n    color = \"black\"\n  )\n  \n  ax <- list(\n    title = \"\",\n    showticklabels = TRUE,\n    zeroline = FALSE,\n    showline = FALSE,\n    showgrid = FALSE,\n    tickfont = use.font\n  )\n  \n  ay <- list(\n    title = '',\n    titlefont = use.font,\n    showticklabels = FALSE,\n    zeroline = FALSE,\n    showline = FALSE,\n    showgrid = FALSE\n  )\n  \n  plot_ly(\n    type = 'bar',\n    table,\n    x = ~Question,\n    y = ~Proportion,\n    color = ~Year, colors = c(\"#66757F\",\"#32AB9F\"),\n    hoverinfo = 'text',\n    text = ~paste0(\n      \"<br>\",'Proportion: ', Proportion,'%'\n    )\n  )%>%layout(\n    title=\"Alcohol Consumption Drops in Britain\", titlefont = use.font, xaxis=ax, yaxis=ay ,\n    annotations = list(\n      x = ~Question,\n      y = ~Proportion+10,\n      text = c('', '-7.3%', '', '-7.2%', '', '+2%'),\n      xanchor = 'center',\n      yanchor = 'bottom',\n      showarrow = FALSE\n    ),\n    legend = list(x = 0.6, y = 0.7, orientation = 'h')\n  )\n  \n  \n  \n}\n\nMakeLinePlot <- function(df, age.range, question, counter){\n  #takes in a dataframe, two category identifiers; (df, chr,chr)\n  #modification = dataframe is filtered by given categories\n  #returns a series plot: ProportionChange vs Year\n  \n  table <- df[AgeRange %in% age.range & Question %in% question]\n  use.font <- list(\n    family = \"Courier New, monospace\",\n    size = 15,\n    color = \"black\"\n  )\n  \n  ax <- list(\n    title = \"\",\n    showticklabels = TRUE,\n    zeroline = FALSE,\n    showline = FALSE,\n    showgrid = FALSE,\n    tickfont = use.font\n  )\n  \n  ay <- list(\n    title = question,\n    titlefont = use.font,\n    showticklabels = FALSE,\n    zeroline = FALSE,\n    showline = FALSE,\n    showgrid = FALSE\n  )\n  \n  if (counter != 3){\n    \n    table %>% plot_ly(\n      x = ~Year,\n      y = ~ProportionChange,\n      type = \"scatter\",\n      mode = \"lines\",\n      color = ~Gender,\n      colors = c(\"#008080\",\"#708090\",\"#B8860B\"),\n      hoverinfo =\"text\",\n      showlegend = FALSE,\n      text =~paste0(\n        '<br>', question,\n        '<br>', 'Gender: ', Gender,\n        '<br>', 'Change: ', ProportionChange,\"%\",\n        '<br>', 'Year: ', Year\n        \n      )\n    )%>%\n      layout(\n        title = age.range, \n        titlefont = use.font , \n        xaxis = ax, \n        yaxis = ay,\n        autosize = T\n      )\n  }else{\n    table %>% plot_ly(\n      x = ~Year,\n      y = ~ProportionChange,\n      type = \"scatter\",\n      mode = \"lines\",\n      color = ~Gender,\n      colors = c(\"#008080\",\"#708090\",\"#B8860B\"),\n      hoverinfo =\"text\",\n      # showlegend = TRUE\n      text =~paste0(\n        '<br>', question,\n        '<br>', 'Gender: ', Gender,\n        '<br>', 'Change: ', ProportionChange,\"%\",\n        '<br>', 'Year: ', Year\n        \n      )\n    )%>%\n      layout(\n        title = age.range, \n        titlefont = use.font , \n        xaxis = ax, \n        yaxis = ay,\n        autosize = T,\n        legend = list(orientation = 'h')\n      )\n  }\n  \n  \n  \n}\n\nFetchLinePlots <- function(df){\n  #takes in a dataframe\n  #modification = None\n  #returns a series plot listed by Question an Age Range\n  age.ranges <- unique(df$AgeRange)\n  questions <- unique(df$Question)\n  \n  foreach(i=1:length(age.ranges)) %do%{\n    return(\n      foreach(j=1:length(questions)) %do%{\n        return(MakeLinePlot(df, age.ranges[i], questions[j], j))\n      }\n    )\n  } -> all.plots\n  \n  names(all.plots) <- age.ranges\n  \n  \n  return(all.plots)\n}\n\n# ##===== fetch data from csv file in working directory\ndata <- fread('data.csv')\n#glimpse(data)\n\n### ################ Observation\n### All columns are character types.\n### \n### The Year column has some cases of\n### Inconsistent formating, (2,007 instead of 2007).\n### \n### Change \"Age Range\" column name to \"AgeRange\"\n### to facilitate selection and data operations.\n### Also, change 'All 16+' => '16+'\n### \n### For Gender Column, replace 'All Persons' > 'All'\n### \n### The proportion column must be numeric; hence, we shall remove the \"%\"\n### and then convert values to numeric type\n### \n### \n### The Question column has some cases of\n### spelling errors, i.e replacing 'on' with 'or' in \n### 'Drank alcohol on five on more days in the last week'.\n### \n### The Year-over-Year proportion changes must be calculated\n### ################\n\n\n####===== Reformating columns\ndata[, Year:= ReformatYear(Year)]\ndata[, Gender := ReformatGender(Gender)]\ndata[, Proportion := ReformatProportion(Proportion)]\ndata[, Question := ReformatQuestion(Question)]\n\n####===== Change Age Range => AgeRange AND REFORMAT\nsetnames(data, \"Age Range\", \"AgeRange\")\ndata[, AgeRange := ReformatAgeRange(AgeRange)]\n\n####===== Create PoportionChange variable\ndata[, ProportionChange := round(c(0,diff(Proportion)),2), by = c(\"Question\", \"AgeRange\",\"Gender\")]\n\n\n####===== Make Line Plots for Proportion Changes\nline.plots <- FetchLinePlots(data)\n\n####===== Group Line Plots By Age Range\n# test <- plotly::subplot(\n#   get.plots$`16 to 24`,\n#   nrows = 3,\n#   shareX = TRUE, shareY = TRUE\n# )\n\n####===== Bar Plots By Question showing proportion difference for 2005 & 2016\nbar.plots <- MakeBarPlot(data)\n",
    "created" : 1498076125110.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "856024172",
    "id" : "4F9CB9CC",
    "lastKnownWriteTime" : 1498076824,
    "last_content_update" : 1498076824034,
    "path" : "~/GITHUB/alcohol_britainViz/processing.R",
    "project_path" : "processing.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}